{"version":3,"sources":["../../src/pages/notifications/notifications.module.ts","../../src/pages/notifications/notifications.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACI;AAapD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAXnC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yEAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yEAAiB,CAAC;aAC5C;YACD,OAAO,EAAE;gBACP,yEAAiB;aAClB;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACfM;AACkC;AACD;AACjB;AACqB;AAE/E;;;;;GAKG;AAMH;IAKE,2BAAmB,OAAsB,EAAS,SAAoB,EAClD,QAAkB,EAAU,UAA8B,EAAU,KAAoB,EAAU,kBAAwC;QAD9J,iBAeC;QAfkB,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAClD,aAAQ,GAAR,QAAQ,CAAU;QAAU,eAAU,GAAV,UAAU,CAAoB;QAAU,UAAK,GAAL,KAAK,CAAe;QAAU,uBAAkB,GAAlB,kBAAkB,CAAsB;QAC5J,IAAI,CAAC,mBAAmB,GAAG;YACzB,EAAC,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,WAAW,EAAC;YACrC,EAAC,KAAK,EAAE,uBAAuB,EAAE,EAAE,EAAE,YAAY,EAAC;YAClD,EAAC,KAAK,EAAE,kBAAkB,EAAE,EAAE,EAAE,aAAa,EAAC;YAC9C,EAAC,KAAK,EAAE,8BAA8B,EAAE,EAAE,EAAE,OAAO,EAAC;SACrD,CAAC;QACF,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,qBAAW;YAC5D,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;gBAC1B,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBACpD,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACvD;QACH,CAAC,CAAC;IACJ,CAAC;IAED,oDAAwB,GAAxB;QAAA,iBAiBC;QAhBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACzC,IAAG,IAAI,CAAC,sBAAsB,EAAE;YAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,gBAAM;gBACpF,IAAG,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;oBAC9B,KAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;iBACpD;gBACD,IAAI,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;oBAC7B,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,6BAA6B,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;gBAC/B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,mCAAmC,CAAC,CAAC;aAC9D;iBAAM;gBACL,KAAK,CAAC,mCAAmC,CAAC,CAAC;aAC5C;SACF;IACH,CAAC;IAvCU,iBAAiB;QAL7B,uFAAS,EAAE;QACX,wFAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;4KAM4B,8EAAa,CAAoB,mGAAS;YACxC,QAAQ,EAAsB,IAAkG;OANnJ,iBAAiB,CA0C7B;IAAD,CAAC;AAAA;SA1CY,iBAAiB,e","file":"7.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { NotificationsPage } from './notifications';\n\n@NgModule({\n  declarations: [\n    NotificationsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(NotificationsPage),\n  ],\n  exports: [\n    NotificationsPage\n  ]\n})\nexport class NotificationsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.module.ts","import { Component } from '@angular/core';\nimport {IonicPage, NavController, NavParams, Platform} from 'ionic-angular';\nimport {AppStorageProvider} from \"../../providers/app-storage/app-storage\";\nimport {AlertProvider} from \"../../providers/alert/alert\";\nimport {NotificationProvider} from \"../../providers/notification/notification\";\n\n/**\n * Generated class for the NotificationsPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-notifications',\n  templateUrl: 'notifications.html',\n})\nexport class NotificationsPage {\n\n  notificationOptions: any;\n  selectedNotificationId: string;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              private platform: Platform, private appStorage: AppStorageProvider, private alert: AlertProvider, private localNotifications: NotificationProvider) {\n    this.notificationOptions = [\n      {title: \"Κάθε μέρα\", id: 'every_day'},\n      {title: \"Μια φορά την εβδομάδα\", id: 'every_week'},\n      {title: \"Μια φορά το μήνα\", id: 'every_month'},\n      {title: \"Να μην έρχονται ειδοποιήσεις\", id: 'never'}\n    ];\n    this.selectedNotificationId = 'every_day';\n    this.appStorage.get('notification_frequency').then(frequencyId => {\n      if(JSON.parse(frequencyId)) {\n        console.log(\"frequency: \", JSON.parse(frequencyId));\n        this.selectedNotificationId = JSON.parse(frequencyId);\n      }\n    })\n  }\n\n  saveNotificationSettings() {\n    console.log(this.selectedNotificationId);\n    if(this.selectedNotificationId) {\n      this.appStorage.set('notification_frequency', this.selectedNotificationId).then(result => {\n        if(this.platform.is('cordova')) {\n          this.localNotifications.scheduleNextNotification();\n        }\n        if (this.platform.is('cordova'))\n          this.alert.displayToast(\"Οι ρυθμίσεις αποθηκεύτηκαν.\");\n      });\n    } else {\n      if (this.platform.is('cordova')) {\n        this.alert.displayToast(\"Πρέπει να δηλώσετε κάποια επιλογή\");\n      } else {\n        alert(\"Πρέπει να δηλώσετε κάποια επιλογή\");\n      }\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.ts"],"sourceRoot":""}